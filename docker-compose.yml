version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: twitch-crypto-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - twitch-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitch-crypto-app
    restart: unless-stopped
    ports:
      - "${HTTP_LISTEN_PORT}:8080"
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_SSLMODE: ${DB_SSLMODE}
      APP_ENV: ${APP_ENV}
      APP_PORT: ${HTTP_LISTEN_PORT}
      ROUTE_PREFIX: ${ROUTE_PREFIX}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - twitch-network

networks:
  twitch-network:

volumes:
  postgres_data:
