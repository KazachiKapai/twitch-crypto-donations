openapi: 3.0.3
info:
  title: Twitch Crypto Donations API
  description: API for registering wallet addresses and sending donation alerts to streamers
  version: 1.0.0
servers:
  - url: https://twitch-crypto-api-h3reiljepq-uc.a.run.app
    description: Test server
  - url: http://localhost:8080
    description: Development server

paths:
  /api/set-obs-webhooks:
    post:
      summary: Register streamer in OBS service
      description: Registers stream in OBS service and returns existing donation URL if wallet is already registered
      tags:
        - OBS Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
              properties:
                wallet:
                  type: string
                  description: The crypto wallet address to setobswebhooks
                  example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
      responses:
        '201':
          description: Wallet successfully registered and donation URL created
          content:
            application/json:
              schema:
                type: object
                properties:
                  donation_url:
                    type: string
                    description: The generated donation URL for the wallet
                    example: "https://donate.example.com/0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        '409':
          description: Wallet already registered, returning existing donation URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  donation_url:
                    type: string
                    description: The existing donation URL for the wallet
                    example: "https://donate.example.com/0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        '400':
          description: Bad request - invalid wallet format or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/send-donate:
    post:
      summary: Send a donation alert
      description: Sends a donation alert to the streamer's OBS overlay. The donation must include an audio URL and will be displayed with the provided text, username, and amount.
      tags:
        - Donations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationRequest'
            examples:
              basic:
                summary: Basic donation with audio
                value:
                  wallet: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
                  username: "CryptoWhale"
                  amount: 2.5
                  currency: "SOL"
                  text: "GM! To the moon 🚀"
                  audio_url: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
                  duration_ms: 7000
                  layout: "default"
      responses:
        '204':
          description: Donation successfully sent to streamer's OBS overlay
        '404':
          description: Wallet not found - the wallet address is not registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Wallet not found"
                code: "WALLET_NOT_FOUND"
        '400':
          description: Bad request - invalid request body or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Request validation failed"
                details: "audio_url is required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/generate-nonce:
    post:
      summary: Generate unique message for signing
      description: Generates a unique message (containing a nonce) to be signed by the user's Solana wallet.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonceGenerationRequest'
      responses:
        '200':
          description: Unique message successfully generated and returned.
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: The unique message containing the nonce to be signed by the wallet.
                    example: "Sign in to KapachiPay\n\nNonce: kXvN4ZM8R3yK9pL2wQ5tA6bH7cJ8dF9gH0kL1mN2oP3qR4sT5uV6w="
        '400':
          description: Bad request - invalid or missing address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server or database error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/verify-signature:
    post:
      summary: Verify wallet signature and issue JWT
      description: Verifies the cryptographic signature against the unique message and issues a JWT if successful. Prevents replay attacks by consuming the nonce.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySignatureRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt_token:
                    type: string
                    description: JWT token associated with user
          description: Signature verified successfully and JWT is received.
        '401':
          description: Unauthorized - Signature verification failed (e.g., address mismatch or invalid/expired nonce).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request - invalid signature format or missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error

  /api/confirm-payment:
    post:
      summary: Confirm Solana Payment
      description: Checks the Solana blockchain for a specific transaction signature and confirms it was successful.
      tags:
        - Donations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentConfirmationRequest'
      responses:
        '200':
          description: Transaction found, confirmed, and successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
        '400':
          description: Bad request - invalid transaction signature format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "invalid signature format: illegal base58 data"
                code: "INVALID_SIGNATURE"
        '404':
          description: Transaction not found or not yet confirmed by the network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "transaction not found or not yet confirmed by the network"
                code: "TX_NOT_FOUND"
        '409':
          description: Transaction was found but failed on-chain (tx.Meta.Err != nil).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Transaction failed with error: InstructionError(...)"
                code: "TX_FAILED"
        '500':
          description: Internal server or RPC error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/secure/donations-history:
    get:
      summary: Get donation history for authenticated user
      description: Returns all donations made by the authenticated user, ordered by most recent first
      tags:
        - Donations
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Successfully retrieved donation history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DonationsHistoryResponse'
              example:
                donations:
                  - donation_amount: "2.5"
                    sender_address: "0xe92a7b67d5d1A5b2f410B7F44Be14333c5E7732c"
                    sender_username: "CryptoWhale"
                    currency: "SOL"
                    text: "GM! To the moon 🚀"
                    audio_url: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
                    image_url: "https://images.example.com/avatar.png"
                    duration_ms: 7000
                    layout: "default"
                    channel: "streamer_channel_123"
                    created_at: "2025-10-27T10:30:00Z"
                amount: 0
        '401':
          description: Unauthorized - missing or invalid JWT token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Unauthorized or no jwt middleware is found"
                code: "UNAUTHORIZED"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/verify-signature endpoint
  schemas:
    DonationsHistoryResponse:
      type: object
      required:
        - donations
        - amount
      properties:
        donations:
          type: array
          description: List of donations made by the user
          items:
            $ref: '#/components/schemas/DonationHistoryItem'
        amount:
          type: integer
          format: int64
          description: Total amount (currently always 0, can be calculated if needed)
          example: 0
    VerifySignatureRequest:
      type: object
      required:
        - address
        - message
        - signature
      properties:
        address:
          type: string
          description: The address of user (or its wallet)
        message:
          type: string
          description: The message that was signed (must contain the unique nonce)
        signature: # ⬅️ Changed from 'Signature' to 'signature'
          type: string
          description: The cryptographic signature of the message
    NonceGenerationRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: The Solana wallet public key (base58 encoded)
          minLength: 32
          maxLength: 44
          pattern: '^[1-9A-HJ-NP-Za-km-z]{32,44}$'
          example: "DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK"
      example:
        address: "DYw8jCTfwHNRJhhmFcbXvVDTqWMEVFBX6ZKUmG5CNSKK"
    DonationRequest:
      type: object
      required:
        - wallet
        - username
        - amount
        - currency
        - text
        - audio_url
        - duration_ms
        - layout
      properties:
        wallet:
          type: string
          description: The recipient's wallet address (must be registered)
          example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        username:
          type: string
          description: The donor's username to display
          minLength: 1
          maxLength: 50
          example: "CryptoWhale"
        amount:
          type: number
          format: double
          description: The donation amount
          minimum: 0
          exclusiveMinimum: true
          example: 2.5
        currency:
          type: string
          description: The cryptocurrency used for donation
          enum: [SOL, ETH, BTC, USDC, USDT]
          example: "SOL"
        text:
          type: string
          description: The donation message to display
          minLength: 1
          maxLength: 500
          example: "GM! To the moon 🚀"
        audio_url:
          type: string
          format: uri
          description: URL to the audio file (TTS or uploaded) - REQUIRED
          example: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
        image_url:
          type: string
          format: uri
          description: Optional URL to an image to display with the donation
          example: "https://images.example.com/avatar.png"
        duration_ms:
          type: number
          format: double
          description: Duration in milliseconds for how long to show the alert
          minimum: 1000
          maximum: 60000
          example: 7000
        layout:
          type: string
          description: The layout style for the donation alert
          enum: [default, minimal, banner, fullscreen]
          default: default
          example: "default"

    PaymentConfirmationRequest:
      type: object
      required:
        - signature
        - recipient
        - sol_amount
      properties:
        signature:
          type: string
          description: The Base58-encoded Solana transaction signature.
          example: "4vK9hL9tB5wYJ2M3X4C5V6B7H8G9D0S1F2E3A4Z5X6C7V8B9N0M1L2K3J4H5G6F7D8S9A0"
        recipient:
          type: string
          description: The expected recipient Solana public key address (for verification).
          example: "H8T7iF7G9D0S1F2E3A4Z5X6C7V8B9N0M1L2K3J4H5G6F7D8S9A0kU1"
        sol_amount:
          type: string
          description: The expected amount of SOL in the transaction (as a string).
          example: "0.5"

    PaymentConfirmationResponse:
      type: object
      required:
        - confirmed
        - message
      properties:
        confirmed:
          type: boolean
          description: True if the transaction was confirmed and successful.
          example: true
        message:
          type: string
          description: Status message.
          example: "Transaction successfully confirmed on Solana."
        slot:
          type: integer
          format: int64
          description: The slot number the transaction was confirmed in.
          example: 210000000

    DonationHistoryItem:
      type: object
      required:
        - donation_amount
        - sender_address
        - sender_username
        - currency
        - text
        - audio_url
        - duration_ms
        - layout
        - channel
        - created_at
      properties:
        donation_amount:
          type: string
          description: The donation amount as a string
          example: "2.5"
        sender_address:
          type: string
          description: The sender's wallet address
          example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        sender_username:
          type: string
          description: The sender's username
          example: "CryptoWhale"
        currency:
          type: string
          description: The cryptocurrency used
          example: "SOL"
        text:
          type: string
          description: The donation message
          example: "GM! To the moon 🚀"
        audio_url:
          type: string
          description: URL to the audio file
          example: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
        image_url:
          type: string
          description: Optional URL to an image
          example: "https://images.example.com/avatar.png"
        duration_ms:
          type: number
          format: double
          description: Duration in milliseconds
          example: 7000
        layout:
          type: string
          description: The layout style used
          example: "default"
        channel:
          type: string
          description: The channel where the donation was sent
          example: "streamer_channel_123"
        created_at:
          type: string
          format: date-time
          description: Timestamp of when the donation was created
          example: "2025-10-27T10:30:00Z"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Internal server error"
        code:
          type: string
          description: Error code
          example: "INTERNAL_ERROR"
        details:
          type: string
          description: Additional error details
          example: "Database connection failed"
