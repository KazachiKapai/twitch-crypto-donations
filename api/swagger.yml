openapi: 3.0.3
info:
  title: Twitch Crypto Donations API
  description: API for registering wallet addresses and sending donation alerts to streamers
  version: 1.0.0
servers:
  - url: https://obs-alerts-802275279509.us-central1.run.app
    description: Test server
  - url: http://localhost:8080
    description: Development server

paths:
  /api/register:
    post:
      summary: Register a wallet address
      description: Registers a new wallet address or returns existing donation URL if wallet is already registered
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
              properties:
                wallet:
                  type: string
                  description: The crypto wallet address to register
                  example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
      responses:
        '201':
          description: Wallet successfully registered and donation URL created
          content:
            application/json:
              schema:
                type: object
                properties:
                  donation_url:
                    type: string
                    description: The generated donation URL for the wallet
                    example: "https://donate.example.com/0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        '409':
          description: Wallet already registered, returning existing donation URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  donation_url:
                    type: string
                    description: The existing donation URL for the wallet
                    example: "https://donate.example.com/0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        '400':
          description: Bad request - invalid wallet format or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/send-donate:
    post:
      summary: Send a donation alert
      description: Sends a donation alert to the streamer's OBS overlay. The donation must include an audio URL and will be displayed with the provided text, username, and amount.
      tags:
        - Donations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationRequest'
            examples:
              basic:
                summary: Basic donation with audio
                value:
                  wallet: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
                  username: "CryptoWhale"
                  amount: 2.5
                  currency: "SOL"
                  text: "GM! To the moon üöÄ"
                  audio_url: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
                  duration_ms: 7000
                  layout: "default"
      responses:
        '204':
          description: Donation successfully sent to streamer's OBS overlay
        '404':
          description: Wallet not found - the wallet address is not registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Wallet not found"
                code: "WALLET_NOT_FOUND"
        '400':
          description: Bad request - invalid request body or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Request validation failed"
                details: "audio_url is required"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/generate-nonce:
    post:
      summary: Generate unique message for signing
      description: Generates a unique message (containing a nonce) to be signed by the user's wallet.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonceGenerationRequest'
      responses:
        '200':
          description: Unique message successfully generated and returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The unique message containing the nonce, address, and timestamp.
                    example: "Sign in to MyDApp. Nonce: 60a5e...-..., Address: 0x742..., Timestamp: 2025-..."
        '400':
          description: Bad request - missing address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server or database error

  /api/verify-signature:
    post:
      summary: Verify wallet signature and issue JWT
      description: Verifies the cryptographic signature against the unique message and issues a JWT if successful. Prevents replay attacks by consuming the nonce.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifySignatureRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt_token:
                    type: string
                    description: JWT token associated with user
          description: Signature verified successfully and JWT is received.
        '401':
          description: Unauthorized - Signature verification failed (e.g., address mismatch or invalid/expired nonce).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Bad request - invalid signature format or missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error

components:
  schemas:
    VerifySignatureRequest:
      type: object
      required:
        - address
        - message
        - signature
      properties:
        address:
          type: string
          description: The address of user (or its wallet)
        message:
          type: string
          description: The message that was signed (must contain the unique nonce)
        signature: # ‚¨ÖÔ∏è Changed from 'Signature' to 'signature'
          type: string
          description: The cryptographic signature of the message
    NonceGenerationRequest:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: The address of user (or its wallet)
          example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
    DonationRequest:
      type: object
      required:
        - wallet
        - username
        - amount
        - currency
        - text
        - audio_url
        - duration_ms
        - layout
      properties:
        wallet:
          type: string
          description: The recipient's wallet address (must be registered)
          example: "0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb"
        username:
          type: string
          description: The donor's username to display
          minLength: 1
          maxLength: 50
          example: "CryptoWhale"
        amount:
          type: number
          format: double
          description: The donation amount
          minimum: 0
          exclusiveMinimum: true
          example: 2.5
        currency:
          type: string
          description: The cryptocurrency used for donation
          enum: [SOL, ETH, BTC, USDC, USDT]
          example: "SOL"
        text:
          type: string
          description: The donation message to display
          minLength: 1
          maxLength: 500
          example: "GM! To the moon üöÄ"
        audio_url:
          type: string
          format: uri
          description: URL to the audio file (TTS or uploaded) - REQUIRED
          example: "https://storage.googleapis.com/your-bucket/tts_123.mp3"
        image_url:
          type: string
          format: uri
          description: Optional URL to an image to display with the donation
          example: "https://images.example.com/avatar.png"
        duration_ms:
          type: number
          format: double
          description: Duration in milliseconds for how long to show the alert
          minimum: 1000
          maximum: 60000
          example: 7000
        layout:
          type: string
          description: The layout style for the donation alert
          enum: [default, minimal, banner, fullscreen]
          default: default
          example: "default"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Internal server error"
        code:
          type: string
          description: Error code
          example: "INTERNAL_ERROR"
        details:
          type: string
          description: Additional error details
          example: "Database connection failed"